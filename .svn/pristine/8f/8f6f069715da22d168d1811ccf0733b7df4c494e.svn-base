#include "CPlayer.h"

CPlayer::CPlayer() {
}

bool CPlayer::onLoad(char* file, int width, int height, int maxFrames){
	if(CEntity::onLoad(file,width,height,maxFrames) == false) return false;
	return true;
}

void CPlayer::onLoop(){
	CEntity::onLoop();
}

void CPlayer::onRender(SDL_Surface* surface) {
	CEntity::onRender(surface);
}

void CPlayer::onCleanup(){
	CEntity::onCleanup();
}

void CPlayer::onAnimate(){
	if(speedX != 0) {
		animControl.maxFrames = HERO_MAX_FRAME;
	}
	else {
		animControl.maxFrames = 0;
	}
	CEntity::onAnimate();
}

void CPlayer::onCollision(CEntity* entity) {
}

bool CPlayer::posValid(int newX, int newY){
	bool retour = true;
	int startX = newX + colX;
	int startY = newY + colY;

	int endX = ((newX + colX) + width - colWidth - 1);
	int endY = ((newY + colY) + height - colHeight - 1);

	if(startX < 0 || startY < 0)
		retour = false;
	if(endX > WWIDTH || endY > WHEIGHT)
		retour = false;
	for(int i = 0; i < entityList.size(); i++){
		if(posValidEntity(entityList[i], newX, newY) == false) {
			retour = false;
		}
	}
	return retour;
}

bool CPlayer::posValidEntity(CEntity* entity, int newX, int newY) {
	if(this != entity && entity != NULL && entity->dead == false &&
		entity->collides(newX + colX, newY + colY, width - colWidth - 1 , height - colHeight - 1 ) == true) {
		CEntityCol entityCol;
		entityCol.entityA = this;
		entityCol.entityB = entity;
		//std::cout<< "coordonnes x " <<  entity->x << endl;
		//std::cout<< "taille " << entity->width << endl;
		//std::cout<< "coordonnes endx " << entity->x + entity->width << endl;

		CEntityCol::entityColList.push_back(entityCol);

		return false;
	}
	return true;
}